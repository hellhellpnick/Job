(function () {
  'use strict';

  const container2 = document.querySelector('.container2');
  const container3 = document.querySelector('.container3');
  const checkIcon = document.getElementById('check-icon');
  const xIcon = document.getElementById('x-icon');
  const showNote = document.getElementById('create-note');
  let i = 0;

  const margin = () => {
    const randomMargin = ['-5px', '1px', '5px', '10px', '15px', '20px'];
    return randomMargin[Math.floor(Math.random() * randomMargin.length)];
  };

  const rotate = () => {
    const randomRotate = ['rotate(3deg)', 'rotate(1deg)', 'rotate(-1deg)', 'rotate(-3deg)', 'rotate(-10deg)'];
    return randomRotate[Math.floor(Math.random() * randomRotate.length)];
  };

  const color = () => {
    const randomColor = ['#c2ff3d', '#ff3de8', '#3dc2ff', '#04e022', '#bc83e6', '#ebb328'];

    if (i > randomColor.length - 1) {
      i = 0;
    }

    return randomColor[i++];
  };

  const typeNote = () => {
    console.log('ok');

    if (container3.style.display == 'none') {
      container3.style.display = 'block';
    } else {
      container3.style.display = 'none';
    }
  };

  const createNote = () => {
    const noteText = document.getElementById('note-text').value;
    const node0 = document.createElement('div');
    const node1 = document.createElement('h2');
    node1.innerHTML = noteText;
    node1.setAttribute('style', 'width: 250px; height: 250px; font-size: 26px; padding: 25px; margin-top: 10px; overflow: hidden; box-shadow: 0 10px  24px 0px rgba(0,0,0, 0.5); transition: all 0.2s ease;');
    node1.style.margin = margin();
    node1.style.transform = rotate();
    node1.style.backgroundColor = color();
    node0.appendChild(node1);
    container2.insertAdjacentElement('beforeend', node0);
    node0.addEventListener('mouseenter', () => {
      node0.style.transform = 'scale(1.1)';
    });
    node0.addEventListener('mouseleave', () => {
      node0.style.transform = 'scale(1)';
    });
    node0.addEventListener('dblclick', () => {
      node0.remove();
    });
    document.getElementById('note-text').value = '';
  };

  xIcon.addEventListener('click', typeNote);
  showNote.addEventListener('click', typeNote);
  checkIcon.addEventListener('click', createNote);

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbInNyYy9qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb250YWluZXIyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lcjInKTtcclxuY29uc3QgY29udGFpbmVyMyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXIzJyk7XHJcbmNvbnN0IGNoZWNrSWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGVjay1pY29uJyk7XHJcbmNvbnN0IHhJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3gtaWNvbicpO1xyXG5jb25zdCBzaG93Tm90ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcmVhdGUtbm90ZScpO1xyXG5cclxubGV0IGkgPSAwO1xyXG5cclxuY29uc3QgbWFyZ2luID0gKCkgPT4ge1xyXG4gIGNvbnN0IHJhbmRvbU1hcmdpbiA9IFsnLTVweCcsICcxcHgnLCAnNXB4JywgJzEwcHgnLCAnMTVweCcsICcyMHB4J107XHJcblxyXG4gIHJldHVybiByYW5kb21NYXJnaW5bTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmFuZG9tTWFyZ2luLmxlbmd0aCldO1xyXG59O1xyXG5cclxuY29uc3Qgcm90YXRlID0gKCkgPT4ge1xyXG4gIGNvbnN0IHJhbmRvbVJvdGF0ZSA9IFtcclxuICAgICdyb3RhdGUoM2RlZyknLFxyXG4gICAgJ3JvdGF0ZSgxZGVnKScsXHJcbiAgICAncm90YXRlKC0xZGVnKScsXHJcbiAgICAncm90YXRlKC0zZGVnKScsXHJcbiAgICAncm90YXRlKC0xMGRlZyknLFxyXG4gIF07XHJcblxyXG4gIHJldHVybiByYW5kb21Sb3RhdGVbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmFuZG9tUm90YXRlLmxlbmd0aCldO1xyXG59O1xyXG5cclxuY29uc3QgY29sb3IgPSAoKSA9PiB7XHJcbiAgY29uc3QgcmFuZG9tQ29sb3IgPSBbXHJcbiAgICAnI2MyZmYzZCcsXHJcbiAgICAnI2ZmM2RlOCcsXHJcbiAgICAnIzNkYzJmZicsXHJcbiAgICAnIzA0ZTAyMicsXHJcbiAgICAnI2JjODNlNicsXHJcbiAgICAnI2ViYjMyOCcsXHJcbiAgXTtcclxuXHJcbiAgaWYgKGkgPiByYW5kb21Db2xvci5sZW5ndGggLSAxKSB7XHJcbiAgICBpID0gMDtcclxuICB9XHJcblxyXG4gIHJldHVybiByYW5kb21Db2xvcltpKytdO1xyXG59O1xyXG5cclxuY29uc3QgdHlwZU5vdGUgPSAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ29rJyk7XHJcbiAgaWYgKGNvbnRhaW5lcjMuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcclxuICAgIGNvbnRhaW5lcjMuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnRhaW5lcjMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVOb3RlID0gKCkgPT4ge1xyXG4gIGNvbnN0IG5vdGVUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdGUtdGV4dCcpLnZhbHVlO1xyXG4gIGNvbnN0IG5vZGUwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgY29uc3Qgbm9kZTEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG5cclxuICBub2RlMS5pbm5lckhUTUwgPSBub3RlVGV4dDtcclxuICBub2RlMS5zZXRBdHRyaWJ1dGUoXHJcbiAgICAnc3R5bGUnLFxyXG4gICAgJ3dpZHRoOiAyNTBweDsgaGVpZ2h0OiAyNTBweDsgZm9udC1zaXplOiAyNnB4OyBwYWRkaW5nOiAyNXB4OyBtYXJnaW4tdG9wOiAxMHB4OyBvdmVyZmxvdzogaGlkZGVuOyBib3gtc2hhZG93OiAwIDEwcHggIDI0cHggMHB4IHJnYmEoMCwwLDAsIDAuNSk7IHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7J1xyXG4gICk7XHJcblxyXG4gIG5vZGUxLnN0eWxlLm1hcmdpbiA9IG1hcmdpbigpO1xyXG4gIG5vZGUxLnN0eWxlLnRyYW5zZm9ybSA9IHJvdGF0ZSgpO1xyXG4gIG5vZGUxLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yKCk7XHJcblxyXG4gIG5vZGUwLmFwcGVuZENoaWxkKG5vZGUxKTtcclxuICBjb250YWluZXIyLmluc2VydEFkamFjZW50RWxlbWVudCgnYmVmb3JlZW5kJywgbm9kZTApO1xyXG5cclxuICBub2RlMC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKCkgPT4ge1xyXG4gICAgbm9kZTAuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlKDEuMSknO1xyXG4gIH0pO1xyXG5cclxuICBub2RlMC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKCkgPT4ge1xyXG4gICAgbm9kZTAuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlKDEpJztcclxuICB9KTtcclxuXHJcbiAgbm9kZTAuYWRkRXZlbnRMaXN0ZW5lcignZGJsY2xpY2snLCAoKSA9PiB7XHJcbiAgICBub2RlMC5yZW1vdmUoKTtcclxuICB9KTtcclxuXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdGUtdGV4dCcpLnZhbHVlID0gJyc7XHJcbn07XHJcblxyXG54SWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHR5cGVOb3RlKTtcclxuc2hvd05vdGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0eXBlTm90ZSk7XHJcbmNoZWNrSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNyZWF0ZU5vdGUpO1xyXG4iXSwibmFtZXMiOlsiY29udGFpbmVyMiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRhaW5lcjMiLCJjaGVja0ljb24iLCJnZXRFbGVtZW50QnlJZCIsInhJY29uIiwic2hvd05vdGUiLCJpIiwibWFyZ2luIiwicmFuZG9tTWFyZ2luIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwicm90YXRlIiwicmFuZG9tUm90YXRlIiwiY29sb3IiLCJyYW5kb21Db2xvciIsInR5cGVOb3RlIiwiY29uc29sZSIsImxvZyIsInN0eWxlIiwiZGlzcGxheSIsImNyZWF0ZU5vdGUiLCJub3RlVGV4dCIsInZhbHVlIiwibm9kZTAiLCJjcmVhdGVFbGVtZW50Iiwibm9kZTEiLCJpbm5lckhUTUwiLCJzZXRBdHRyaWJ1dGUiLCJ0cmFuc2Zvcm0iLCJiYWNrZ3JvdW5kQ29sb3IiLCJhcHBlbmRDaGlsZCIsImluc2VydEFkamFjZW50RWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmUiXSwibWFwcGluZ3MiOiI7OztFQUFBLE1BQU1BLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLGFBQXZCLENBQW5CO0VBQ0EsTUFBTUMsVUFBVSxHQUFHRixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBbkI7RUFDQSxNQUFNRSxTQUFTLEdBQUdILFFBQVEsQ0FBQ0ksY0FBVCxDQUF3QixZQUF4QixDQUFsQjtFQUNBLE1BQU1DLEtBQUssR0FBR0wsUUFBUSxDQUFDSSxjQUFULENBQXdCLFFBQXhCLENBQWQ7RUFDQSxNQUFNRSxRQUFRLEdBQUdOLFFBQVEsQ0FBQ0ksY0FBVCxDQUF3QixhQUF4QixDQUFqQjtFQUVBLElBQUlHLENBQUMsR0FBRyxDQUFSOztFQUVBLE1BQU1DLE1BQU0sR0FBRyxNQUFNO0VBQ25CLFFBQU1DLFlBQVksR0FBRyxDQUFDLE1BQUQsRUFBUyxLQUFULEVBQWdCLEtBQWhCLEVBQXVCLE1BQXZCLEVBQStCLE1BQS9CLEVBQXVDLE1BQXZDLENBQXJCO0VBRUEsU0FBT0EsWUFBWSxDQUFDQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCSCxZQUFZLENBQUNJLE1BQXhDLENBQUQsQ0FBbkI7RUFDRCxDQUpEOztFQU1BLE1BQU1DLE1BQU0sR0FBRyxNQUFNO0VBQ25CLFFBQU1DLFlBQVksR0FBRyxDQUNuQixjQURtQixF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
